// <auto-generated />
using System;
using Api.Database.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Api.Database.Migrations
{
    [DbContext(typeof(projectadContext))]
    [Migration("20200130133918_init, userlogin password removed ")]
    partial class inituserloginpasswordremoved
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("dbAd")
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Api.Database.Model.Article", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApprovalStatusId")
                        .HasColumnName("ApprovalStatusID");

                    b.Property<string>("ArticleBody")
                        .IsRequired()
                        .HasMaxLength(350)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("DateApproved")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ApprovalStatusId");

                    b.HasIndex("EmailAddress");

                    b.ToTable("Article");
                });

            modelBuilder.Entity("Api.Database.Model.ArticleStatusLov", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Status")
                        .IsUnique()
                        .HasName("UQ__ArticleS__3A15923FE8A1903C");

                    b.ToTable("ArticleStatusLOV");
                });

            modelBuilder.Entity("Api.Database.Model.Artisan", b =>
                {
                    b.Property<string>("EmailAddress")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("AreaLocation")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<int>("ArtisanCategoryId")
                        .HasColumnName("ArtisanCategoryID");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdcardNo")
                        .HasColumnName("IDCardNo")
                        .HasMaxLength(40);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.HasKey("EmailAddress")
                        .HasName("PK_ARTISAN");

                    b.HasIndex("ArtisanCategoryId");

                    b.HasIndex("IdcardNo")
                        .IsUnique()
                        .HasName("UQ__Artisan__7EDFFE556682FC51")
                        .HasFilter("[IDCardNo] IS NOT NULL");

                    b.ToTable("Artisan");
                });

            modelBuilder.Entity("Api.Database.Model.ArtisanBankDetails", b =>
                {
                    b.Property<string>("EmailAddress")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<decimal>("AccountNumber")
                        .HasColumnType("numeric(10, 0)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal>("Bvn")
                        .HasColumnName("BVN")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("EmailAddress")
                        .HasName("PK_ARTISANBANKDETAILS");

                    b.ToTable("ArtisanBankDetails");
                });

            modelBuilder.Entity("Api.Database.Model.ArtisanCategories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryDescr")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("SubCategories")
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ArtisanCategories");
                });

            modelBuilder.Entity("Api.Database.Model.ArtisanDashboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(700)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("date");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("ProductImagePath")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("EmailAddress")
                        .IsUnique()
                        .HasName("UQ__ArtisanD__49A14740F9559EDF");

                    b.ToTable("ArtisanDashboard");
                });

            modelBuilder.Entity("Api.Database.Model.ArtisanServices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtisanId")
                        .HasColumnName("ArtisanID");

                    b.Property<DateTime?>("Createdon")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(8000)
                        .IsUnicode(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("ArtisanServices");
                });

            modelBuilder.Entity("Api.Database.Model.Booking", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtisanEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Messages")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("MsgDate")
                        .HasColumnType("date");

                    b.Property<TimeSpan>("MsgTime");

                    b.HasKey("Id");

                    b.HasIndex("ArtisanEmail");

                    b.HasIndex("ClientEmail");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Api.Database.Model.Client", b =>
                {
                    b.Property<string>("EmailAddress")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdcardNo")
                        .HasColumnName("IDCardNo")
                        .HasMaxLength(80);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(13)
                        .IsUnicode(false);

                    b.Property<string>("PicturePath")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(70)
                        .IsUnicode(false);

                    b.HasKey("EmailAddress")
                        .HasName("PK_CLIENT");

                    b.HasIndex("IdcardNo")
                        .IsUnique()
                        .HasName("UQ__Client__7EDFFE55A80A881B")
                        .HasFilter("[IDCardNo] IS NOT NULL");

                    b.ToTable("Client");
                });

            modelBuilder.Entity("Api.Database.Model.Complainant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtisanEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateResolved")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("StatusId")
                        .HasColumnName("StatusID");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ArtisanEmail");

                    b.HasIndex("StatusId");

                    b.ToTable("Complainant");
                });

            modelBuilder.Entity("Api.Database.Model.ComplianStatusLov", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Status")
                        .IsUnique()
                        .HasName("IX_StatusTable");

                    b.ToTable("ComplianStatusLOV");
                });

            modelBuilder.Entity("Api.Database.Model.Location", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<string>("Area")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("Lga")
                        .IsRequired()
                        .HasColumnName("LGA")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Api.Database.Model.PaymentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("money");

                    b.Property<string>("ArtisanEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("date");

                    b.Property<string>("PaymentType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int>("ProjectId")
                        .HasColumnName("ProjectID");

                    b.HasKey("Id");

                    b.HasIndex("ArtisanEmail");

                    b.HasIndex("ClientEmail");

                    b.ToTable("PaymentHistory");
                });

            modelBuilder.Entity("Api.Database.Model.Projects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtisanEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<int>("BookingId")
                        .HasColumnName("BookingID");

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<string>("ProjectStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Api.Database.Model.Quote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ArtisanEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Descr")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<decimal?>("Discount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(38, 2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime");

                    b.Property<int>("OrderStatusId")
                        .HasColumnName("OrderStatus_Id");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(38, 2)");

                    b.Property<int>("ProjectId")
                        .HasColumnName("ProjectID");

                    b.Property<double>("Quantity");

                    b.Property<decimal?>("Vat")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("VAT")
                        .HasColumnType("decimal(38, 2)")
                        .HasDefaultValueSql("((0))");

                    b.HasKey("Id");

                    b.HasIndex("ArtisanEmail");

                    b.HasIndex("OrderStatusId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Quote");
                });

            modelBuilder.Entity("Api.Database.Model.QuoteStatusLov", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("QuoteStatus_LOV");
                });

            modelBuilder.Entity("Api.Database.Model.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArtisanEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<string>("ClientEmail")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("JobEndDate")
                        .HasColumnType("date");

                    b.Property<DateTime>("JobStartDate")
                        .HasColumnType("date");

                    b.Property<int?>("ProjectId")
                        .HasColumnName("ProjectID");

                    b.Property<int>("Rating1")
                        .HasColumnName("Rating");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("ArtisanEmail");

                    b.HasIndex("ClientEmail");

                    b.HasIndex("ProjectId");

                    b.ToTable("Rating");
                });

            modelBuilder.Entity("Api.Database.Model.UserLogin", b =>
                {
                    b.Property<string>("EmailAddress")
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("date");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail");

                    b.Property<string>("NormalizedUserName");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<int>("RoleId")
                        .HasColumnName("RoleID");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false);

                    b.HasKey("EmailAddress")
                        .HasName("PK_USERLOGIN");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasName("UQ__UserLogi__C9F284568AF4CB29");

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("Api.Database.Model.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("RoleID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("date");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .IsUnicode(false);

                    b.HasKey("RoleId")
                        .HasName("PK_USERROLE");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Api.Database.Model.Article", b =>
                {
                    b.HasOne("Api.Database.Model.ArticleStatusLov", "ApprovalStatus")
                        .WithMany("Article")
                        .HasForeignKey("ApprovalStatusId")
                        .HasConstraintName("FK_Article_ArticleStatusLOV");

                    b.HasOne("Api.Database.Model.UserLogin", "EmailAddressNavigation")
                        .WithMany("Article")
                        .HasForeignKey("EmailAddress")
                        .HasConstraintName("FK_Article_UserLogin");
                });

            modelBuilder.Entity("Api.Database.Model.Artisan", b =>
                {
                    b.HasOne("Api.Database.Model.ArtisanCategories", "ArtisanCategory")
                        .WithMany("Artisan")
                        .HasForeignKey("ArtisanCategoryId")
                        .HasConstraintName("FK_Artisan_Catg");
                });

            modelBuilder.Entity("Api.Database.Model.ArtisanBankDetails", b =>
                {
                    b.HasOne("Api.Database.Model.Artisan", "EmailAddressNavigation")
                        .WithOne("ArtisanBankDetails")
                        .HasForeignKey("Api.Database.Model.ArtisanBankDetails", "EmailAddress")
                        .HasConstraintName("FK_ArtisanBankDetails_Artisan");
                });

            modelBuilder.Entity("Api.Database.Model.ArtisanDashboard", b =>
                {
                    b.HasOne("Api.Database.Model.Artisan", "EmailAddressNavigation")
                        .WithOne("ArtisanDashboard")
                        .HasForeignKey("Api.Database.Model.ArtisanDashboard", "EmailAddress")
                        .HasConstraintName("FK_ArtisanDashboard_Artisan");
                });

            modelBuilder.Entity("Api.Database.Model.Booking", b =>
                {
                    b.HasOne("Api.Database.Model.Artisan", "ArtisanEmailNavigation")
                        .WithMany("Booking")
                        .HasForeignKey("ArtisanEmail")
                        .HasConstraintName("FK_Booking_Artisan");

                    b.HasOne("Api.Database.Model.Client", "ClientEmailNavigation")
                        .WithMany("Booking")
                        .HasForeignKey("ClientEmail")
                        .HasConstraintName("FK_Booking_Client");
                });

            modelBuilder.Entity("Api.Database.Model.Complainant", b =>
                {
                    b.HasOne("Api.Database.Model.Artisan", "ArtisanEmailNavigation")
                        .WithMany("Complainant")
                        .HasForeignKey("ArtisanEmail")
                        .HasConstraintName("FK__Complaina__Artis__54CB950F");

                    b.HasOne("Api.Database.Model.ComplianStatusLov", "Status")
                        .WithMany("Complainant")
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Complainant_StatusTable");
                });

            modelBuilder.Entity("Api.Database.Model.PaymentHistory", b =>
                {
                    b.HasOne("Api.Database.Model.Artisan", "ArtisanEmailNavigation")
                        .WithMany("PaymentHistory")
                        .HasForeignKey("ArtisanEmail")
                        .HasConstraintName("FK_PH_Artisan");

                    b.HasOne("Api.Database.Model.Client", "ClientEmailNavigation")
                        .WithMany("PaymentHistory")
                        .HasForeignKey("ClientEmail")
                        .HasConstraintName("FK_PH_Client");
                });

            modelBuilder.Entity("Api.Database.Model.Projects", b =>
                {
                    b.HasOne("Api.Database.Model.Booking", "Booking")
                        .WithMany("Projects")
                        .HasForeignKey("BookingId")
                        .HasConstraintName("FK_Projects_Booking");
                });

            modelBuilder.Entity("Api.Database.Model.Quote", b =>
                {
                    b.HasOne("Api.Database.Model.Artisan", "ArtisanEmailNavigation")
                        .WithMany("Quote")
                        .HasForeignKey("ArtisanEmail")
                        .HasConstraintName("FK__Quote__ArtisanEm__78D3EB5B");

                    b.HasOne("Api.Database.Model.QuoteStatusLov", "OrderStatus")
                        .WithMany("Quote")
                        .HasForeignKey("OrderStatusId")
                        .HasConstraintName("FK__Quote__OrderStat__7CA47C3F");

                    b.HasOne("Api.Database.Model.Projects", "Project")
                        .WithMany("Quote")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK__Quote__ProjectID__7BB05806");
                });

            modelBuilder.Entity("Api.Database.Model.Rating", b =>
                {
                    b.HasOne("Api.Database.Model.Artisan", "ArtisanEmailNavigation")
                        .WithMany("Rating")
                        .HasForeignKey("ArtisanEmail")
                        .HasConstraintName("FK_Rating_Artisan");

                    b.HasOne("Api.Database.Model.Client", "ClientEmailNavigation")
                        .WithMany("Rating")
                        .HasForeignKey("ClientEmail")
                        .HasConstraintName("FK_Rating_Client");

                    b.HasOne("Api.Database.Model.Projects", "Project")
                        .WithMany("Rating")
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK__Rating__ProjectI__04459E07");
                });

            modelBuilder.Entity("Api.Database.Model.UserLogin", b =>
                {
                    b.HasOne("Api.Database.Model.UserRole", "Role")
                        .WithMany("UserLogin")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("UserLogin_fk0");
                });
#pragma warning restore 612, 618
        }
    }
}
